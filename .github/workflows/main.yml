name: Combined ML Pipeline CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  MLFLOW_TRACKING_URL: ${{secrets.MLFLOW_TRACKING_URL}}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
  SSH_HOST: ${{ secrets.SSH_HOST }}  
  SSH_USER: ${{ secrets.SSH_USER }}  
  DOCKER_IMAGE: fraud_detection_cc

jobs:
  preprocess:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python 3.12.7
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.7'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run preprocessing script
      working-directory: preprocessing
      run: |
        python automate.py

    - name: Commit and push processed data
      if: success()
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: 'Update pre-processed data'
        file_pattern: |
          data/processed/fraud_detection_processed.csv
          data/processed/column_list_processed.csv
          models/preprocessing/preprocessor.csv
        commit_user_name: 'github-actions[bot]'
        commit_user_email: 'github-actions[bot]@users.noreply.github.com'
        commit_author: 'github-actions[bot] <github-actions[bot]@users.noreply.github.com>'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    needs: preprocess
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.7'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install docker

      - name: Run MLflow Project
        env:
          MLFLOW_TRACKING_URL: ${{secrets.MLFLOW_TRACKING_URL}}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
        working-directory: training
        run: |
          python modelling.py --data_path ../data/processed/fraud_detection_processed.csv --tuning

      - name: Get Latest MLflow run_id
        working-directory: training/models_tuned/
        run: |
          RUN_ID=$(cat best_tuned_model_run_id.txt)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id: $RUN_ID"

      - name: Install Python Dependencies
        run: |
          pip install docker

      - name: Upload to GitHub Artifacts
        if: env.RUN_ID != ''
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.DOCKER_IMAGE }}-${{ env.RUN_ID }}
          path: training/models_tuned/
          retention-days: 90

      - name: Build Docker Model
        if: env.RUN_ID != ''
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          MLFLOW_TRACKING_URI: ${{ env.MLFLOW_TRACKING_URL }}
        run: |
          echo "Using RUN_ID=${{ env.RUN_ID }}"
          mlflow models build-docker --model-uri "runs:/${{ env.RUN_ID }}/model" --name "${{ env.DOCKER_IMAGE }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Tag and Push Docker Image
        run: |
          docker tag ${{ env.DOCKER_IMAGE }}:latest ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.RUN_ID }}
          docker tag ${{ env.DOCKER_IMAGE }}:latest ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.RUN_ID }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: development
    
    steps:
      - name: Add Server to Known Hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull the new image
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
            
            # Stop and remove old container
            docker stop ${{ env.DOCKER_IMAGE }} || true
            docker rm ${{ env.DOCKER_IMAGE }} || true
            
            # Run new container (customize ports/envs as needed)
            docker run -d \
              --name ${{ env.DOCKER_IMAGE }} \
              -p 5005:8080 \
              -e MLFLOW_TRACKING_URL=${{ env.MLFLOW_TRACKING_URL }} \
              -e MLFLOW_TRACKING_USERNAME=${{ env.MLFLOW_TRACKING_USERNAME }} \
              -e MLFLOW_TRACKING_PASSWORD=${{ env.MLFLOW_TRACKING_PASSWORD }} \
              ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
            
            # Cleanup
            docker system prune -af
